#
# Copyright (c) ZeroC, Inc. All rights reserved.
#

supported-platforms = ppc ppc64

ppc_cppflags        = -q32 -D_LARGE_FILES
ppc_ldflags         = $(ppc_cppflags)
ppc_targetdir       = $(if $(filter %/build,$5),/ppc)

ppc64_cppflags      = -q64
ppc64_ldflags       = $(ppc64_cppflags)
ppc64_targetdir     = $(if $(filter %/build,$5),/ppc64,$(if $(filter-out $($1_target),program),64))
ppc64_targetname    = $(if $(and $(filter $(bindir)%,$($4_targetdir)),$(filter $($1_target),program)),_64)

shared_cppflags     = -brtl
static_targetdir        = $(if $(and $(filter-out %/build,$5),$(filter $($1_target),program)),,static)

platform_cxx        = xlC_r
platform_ld         = xlC_r

xlc_compiler        = yes

cppflags            = -qrtti=all -qstaticinline -qhalt=i $(if $(filter yes,$(OPTIMIZE)),-O2 -DNDEBUG,-g)
ifeq ($(OPTIMIZE),yes)
    cppflags        += -O2 -DNDEBUG
else
    cppflags        += -g
endif

ifeq ($(embedded_runpath),yes)
    #
    # Our default for embedded runpath prefix on AIX is $(prefix)
    #
    ifeq ($(embedded_runpath_prefix),)
        embedded_runpath_prefix = $(prefix)
    endif
endif

depend-cppflags = -qmakedep=gcc -MF $1
rpath-ldflag    = -Wl,-blibpath:$1:/usr/lib

# $(call mklib,$1=target,$2=objects,$3=libname,$4=version,$5=soversion,$6=ldflags,$7=platform)
mklib           = $(or $($7_ar),$(AR)) -X32_64 cr $1 $2

# $(call mkshlib,$1=target,$2=objects,$3=libname,$4=version,$5=soversion,$6=ldflags,$7=platform)
tmpsofile       = $(dir $1)lib$2.so$(if $3,.$3)
mkshlib         ?= $(or $($7_cxx),$(CXX)) -qmkshrobj -o $(call tmpsofile,$1,$3,$5) $2 $6 && \
                  $(or $($7_ar),$(AR)) -X32_64 cr $1 $(call tmpsofile,$1,$3,$5) && \
                  rm $(call tmpsofile,$1,$3,$5)

#
# $(call mkxxx,$1=libname,$2=version,$3=soversion)
#
mkshlibfilename = lib$(1).a

mkpymodulename  = $(1).so

Ice_system_libs         = -lcrypto
IceSSL_system_libs      = -lssl -lcrypto
Glacier2CryptPermissionsVerifier_system_libs = -lcrypt
